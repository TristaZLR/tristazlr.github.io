{"title":"Data Analysis with Python 1","date":"2019-05-08T12:30:00.000Z","thumbnail":"/img/1.jpg","slug":"Data Analysis with Python 1","tags":["Data Science","python"],"categories":["学习 - DA"],"updated":"2019-05-08T12:55:03.676Z","content":"<p>课程连接：<br> <a href=\"https://courses.cognitiveclass.ai/courses/course-v1:CognitiveClass+DA0101EN+2017/courseware/b2b37b871cbc4fa5b695bab7ba02ed7c/7848468eec5141288646de18a2a23f2a/\" title=\"Data Analysis with Python\" target=\"_blank\" rel=\"noopener\">CognitiveClass DA0101EN</a><br>前期基础：<br>python<br>NumPy、Pandas、SciPy（数据处理）<br>Matplotlib、Seaborn （数据可视化）<br>Scikit-learn、StatsModels（算法）  </p>\n<h1 id=\"Data-Analysis-with-Python-1\"><center>Data Analysis with Python 1</center><a href=\"post/Data Analysis with Python 1#Data-Analysis-with-Python-1\"></a></h1><h2 id=\"Introduction\">Introduction<a href=\"post/Data Analysis with Python 1#Introduction\"></a></h2><p>…    </p>\n<h3 id=\"1-在python中导入和导出Data（Using-Pandas）\">1 在python中导入和导出Data（Using Pandas）<a href=\"post/Data Analysis with Python 1#1-在python中导入和导出Data（Using-Pandas）\"></a></h3><p>需要注意两点：格式和路径<br><img src=\"http://i2.bvimg.com/686269/b99c9f404839aed8.png\" alt=\"Markdown\"><br>以CSV文件为例<br>步骤1_导入：<br><code>import pandas as pd</code><br><code>url = &quot;url地址&quot;</code><br><code>pd.read_csv(url)</code><br>//read___csv默认数据包含header,如果倒入的数据没有header需要设置header=none<br>（e.g. pd.read_csv(url, header = None)）<br><code>df.head(n) or df.tail(n)</code><br>步骤2_优化dataframe：<br><code>headers = [&quot;A&quot;,&quot;B&quot;,&quot;C&quot;]</code><br><code>df.columns = headers</code><br>步骤3_导出：<br><code>path = &quot;c:\\Windows\\.....\\examples.csv&quot;</code><br><code>df.to_csv(path)</code>  </p>\n<h3 id=\"2-用python分析数据\">2 用python分析数据<a href=\"post/Data Analysis with Python 1#2-用python分析数据\"></a></h3><p>check data type<br><code>df.dtypes</code><br>get quick statistics<br><code>df.describe()</code>&emsp;//此方法默认跳过无数值的格子<br><code>df.describe(include=&quot;all&quot;)</code> &emsp;//总结所有列<br>get concise summery<br><code>df.info</code>&emsp;//This function shows the top 30 rows and bottom 30 rows of the dataframe.  </p>\n<h2 id=\"Data-Wrangling\">Data Wrangling<a href=\"post/Data Analysis with Python 1#Data-Wrangling\"></a></h2><hr>\n<h3 id=\"1-Data-pre-processing\">1 Data pre-processing<a href=\"post/Data Analysis with Python 1#1-Data-pre-processing\"></a></h3><p>基础dataframe操作<br>访问列<br><code>df[&quot;列名&quot;]</code><br>运算每个列的值<br><code>df[&quot;列名&quot;] = df[&quot;列名&quot;]   + 1</code>  </p>\n<h3 id=\"2-Identify-and-handle-missing-values\">2 Identify and handle missing values<a href=\"post/Data Analysis with Python 1#2-Identify-and-handle-missing-values\"></a></h3><p>通常丢失值会显示成“？”，“N/A”，0或者空格  </p>\n<ul>\n<li>第一种解决办法：找到原数据，查看丢失值  </li>\n<li>第二种解决办法：抛出丢失值<br><code>df.dropna()</code><br>axis=0 drop row<br>axis=1 drop column<br><code>df.dropna(subset=[&quot;price&quot;], axis=0, inplace=True)</code><br>“Inplace=True” just writes the result back into the dataframe.<br>等同于<code>df=df.dropna(subset=[&quot;price&quot;], axis=0)</code><br>可以不放inplace来检查操作是否正确  </li>\n<li>第三种解决办法：替换丢失值（通常用平均值或者近似值）<br><code>df.replace(missing_value, new_ value)</code><br><code>mean = df[&quot;列名&quot;].mean()</code><br><code>df[&quot;列名&quot;].replace(missing_value, mean)</code>  </li>\n</ul>\n<h3 id=\"3-Data-formats\">3 Data formats<a href=\"post/Data Analysis with Python 1#3-Data-formats\"></a></h3><ul>\n<li>单位转换，例如100m/s转换成km/h  </li>\n<li>类型转换，objects转换成int64<br><code>df[&quot;列名&quot;]=df[&quot;列名&quot;].astype(&quot;int&quot;)</code> </li>\n</ul>\n<h3 id=\"4-Data-normalization\">4 Data normalization<a href=\"post/Data Analysis with Python 1#4-Data-normalization\"></a></h3><p>几种数据规范化的方法  </p>\n<ol>\n<li>简单的特征缩放，能够将新数据缩放到（0，1）<br><img src=\"http://i2.bvimg.com/686269/ad7439261c4cf9af.png\" alt=\"Markdown\"><br><code>df[&quot;列名&quot;]=df[&quot;列名&quot;]/df[&quot;列名&quot;].max()</code>  </li>\n<li>差值法，同样能够将新数据缩放到（0，1)<br><img src=\"http://i2.bvimg.com/686269/d874afc4afe9b483.png\" alt=\"Markdown\"><br><code>df[&quot;列名&quot;]=(df[&quot;列名&quot;]-df[&quot;列名&quot;].min())/(df[&quot;列名&quot;].max()-df[&quot;列名&quot;].min())</code>  </li>\n<li>标准法，结果值悬停在0附近，通常介于-3和+3之间，但可以更高或更低。<br><img src=\"http://i2.bvimg.com/686269/d796ebaa93eeb1d5.png\" alt=\"Markdown\"><br><code>df[&quot;列名&quot;]=(df[&quot;列名&quot;]-df[&quot;列名&quot;].mean())/df[&quot;列名&quot;].std()</code>  </li>\n</ol>\n<h3 id=\"5-Data-binning\">5 Data binning<a href=\"post/Data Analysis with Python 1#5-Data-binning\"></a></h3><p><code>binwidth = int( (max(df[&quot;列名&quot;]) - min(df[&quot;列名&quot;])) / 组数)</code><br><code>bins = range( min(df[&quot;列名&quot;]), max(df[&quot;列名&quot;]) ,binwidth )</code><br><code>group_names = [&#39;Low&#39;, &#39;Medium&#39;, &#39;High&#39;]</code><br><code>df[&#39;列名.binned&#39;] = pd.cut( df[&#39;列名&#39;]，bins，labels=group_names )</code> </p>\n<h3 id=\"6-Turning-categorical-values-to-numeric-variables\">6 Turning categorical values to numeric variables<a href=\"post/Data Analysis with Python 1#6-Turning-categorical-values-to-numeric-variables\"></a></h3><p>具体思路：独热法（one-hot-encoding）<br>第一步将原始特征中的每一个元素转换为新特征<br>给新特征赋值（0或1）<br><code>pd.get_dummies(df[&quot;列名&quot;])</code>  </p>\n","next":{"title":"Data Analysis with Python 3","slug":"Data Analysis with Python 3"},"link":"https://www.tristazlr.top/post/Data Analysis with Python 1/","toc":[{"title":"<center>Data Analysis with Python 1</center>","id":"Data-Analysis-with-Python-1","index":"1","children":[{"title":"Introduction","id":"Introduction","index":"1.1","children":[{"title":"1 在python中导入和导出Data（Using Pandas）","id":"1-在python中导入和导出Data（Using-Pandas）","index":"1.1.1"},{"title":"2 用python分析数据","id":"2-用python分析数据","index":"1.1.2"}]},{"title":"Data Wrangling","id":"Data-Wrangling","index":"1.2","children":[{"title":"1 Data pre-processing","id":"1-Data-pre-processing","index":"1.2.1"},{"title":"2 Identify and handle missing values","id":"2-Identify-and-handle-missing-values","index":"1.2.2"},{"title":"3 Data formats","id":"3-Data-formats","index":"1.2.3"},{"title":"4 Data normalization","id":"4-Data-normalization","index":"1.2.4"},{"title":"5 Data binning","id":"5-Data-binning","index":"1.2.5"},{"title":"6 Turning categorical values to numeric variables","id":"6-Turning-categorical-values-to-numeric-variables","index":"1.2.6"}]}]}],"copyright":{"author":"Trista's Blog","link":"<a href=\"https://www.tristazlr.top/post/Data Analysis with Python 1/\" title=\"Data Analysis with Python 1\">https://www.tristazlr.top/post/Data Analysis with Python 1/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}